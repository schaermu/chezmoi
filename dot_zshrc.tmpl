# ZSH configuration
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=1000
setopt autocd extendedglob
bindkey -e

# enable passphrase prompt for gpg
export GPG_TTY=$(tty)
echo "test" | gpg --clearsign > /dev/null 2>&1

# pull in asdf
. "$HOME/.asdf/asdf.sh"

fpath=(${ASDF_DIR}/completions $fpath)
fpath+=~/.zfunc
zstyle :compinstall filename "$HOME/.zshrc"
autoload -Uz compinit && compinit


# Antigen
source ~/antigen.zsh
antigen use oh-my-zsh
antigen bundle git
antigen bundle pip
antigen bundle asdf-direnv
antigen bundle zsh-users/zsh-syntax-highlighting
antigen apply

# bring in auto completion for kubectl and helm
if [[ $commands[kubectl] ]]; then
  source <(kubectl completion zsh)
fi
if [[ $commands[helm] ]]; then
  source <(helm completion zsh)
fi

# set up rust
if test -f "$HOME/.cargo/env"; then
  source "$HOME/.cargo/env"
fi

# Bring in env vars and aliases.
if [[ -f ~/.bwenv ]]; then
  source ~/.bwenv
fi
source ~/.zshenv
source ~/.shell_aliases

# Bring in direnv and asdf hooks.
eval "$(direnv hook zsh)"
if test -f "$HOME/.config/asdf-direnv/zshrc"; then
  source "$HOME/.config/asdf-direnv/zshrc"
else
  asdf direnv setup --no-touch-rc-file --shell zsh --version latest
  source "$HOME/.config/asdf-direnv/zshrc"
fi

# setup omnisharp env vars
if [[ ! -z "$(asdf plugin list | grep dotnet)" ]]; then
  export DOTNET_ROOT="$(asdf where dotnet)"
  export DOTNET_MSBUILD_SDK_RESOLVER_SDKS_VER="$(basename $DOTNET_ROOT)"
  export DOTNET_MSBUILD_SDK_RESOLVER_SDKS_DIR="$DOTNET_ROOT/sdk/$DOTNET_MSBUILD_SDK_RESOLVER_SDKS_VER/Sdks"
  export DOTNET_MSBUILD_SDK_RESOLVER_CLI_DIR="$DOTNET_ROOT"
fi

{{- if .wsl }}
# fix for WSL/WT to keep the current path (https://docs.microsoft.com/en-us/windows/terminal/tutorials/new-tab-same-directory)
keep_current_path() {
  printf "\e]9;9;%s\e\\" "$(wslpath -w "$PWD")"
}
precmd_functions+=(keep_current_path)

# set DISPLAY to wsl's automatically assigned nameserver (aka localhost)
export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2; exit;}'):0.0
{{- end }}

# initialize starship prompt
eval "$(starship init zsh)"